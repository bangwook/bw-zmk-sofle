#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    minus_plus: minus_plus {
        compatible = "zmk,behavior-tap-dance";
        label = "MINUS_PLUS";
        #binding-cells = <0>;
        bindings = <&kp MINUS>, <&kp EQUAL>;
    };

    Bracket_L: Bracket_L {
        compatible = "zmk,behavior-tap-dance";
        label = "BRACKET_L";
        #binding-cells = <0>;
        bindings = <&kp NUMBER_9>, <&kp LEFT_BRACKET>;
    };

    Bracket_R: Bracket_R {
        compatible = "zmk,behavior-tap-dance";
        label = "BRACKET_R";
        #binding-cells = <0>;
        bindings = <&kp NUMBER_0>, <&kp RIGHT_BRACKET>;
    };

    Display_Knob: Display_Knob {
        compatible = "zmk,behavior-sensor-rotate";
        label = "DISPLAY_KNOB";
        #sensor-binding-cells = <0>;
        bindings = <&Display_R>, <&Display_L>;
    };

    rgb_knob: rgb_knob {
        compatible = "zmk,behavior-sensor-rotate";
        label = "RGB_KNOB";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_EFF>, <&rgb_ug RGB_EFR>;

        tap-ms = <1>;
    };

    macros {
        Display_R: Display_R {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LC(LEFT_WIN) &kp RIGHT_ARROW>;
            label = "DISPLAY_R";
        };

        Display_L: Display_L {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LC(LEFT_WIN) &kp LEFT_ARROW>;
            label = "DISPLAY_L";
        };

        Display_all: Display_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_WIN &kp TAB>;
            label = "DISPLAY_ALL";
        };
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        Layer_3 {
            bindings = <&sl 3>;
            key-positions = <56 60>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_base {
            bindings = <
&kp ESC       &kp N1     &kp N2        &kp N3        &kp N4  &kp N5       &kp UP_ARROW     &kp N6   &kp N7  &kp N8            &kp NUMBER_9  &kp NUMBER_0  &kp DELETE
&kp TAB       &kp Q      &kp W         &kp E         &kp R   &kp T        &kp DOWN_ARROW   &kp Y    &kp U   &kp I             &kp O         &kp P         &kp BACKSPACE
&kp CAPS      &kp A      &kp S         &kp D         &kp F   &kp G        &kp LEFT_ARROW   &kp H    &kp J   &kp K             &kp L         &kp SEMI      &kp APOS
&kp LSHFT     &kp Z      &kp X         &kp C         &kp V   &kp B        &kp RIGHT_ARROW  &kp N    &kp M   &kp COMMA         &kp DOT       &kp FSLH      &kp RIGHT_SHIFT
&Display_all  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 1   &kp SPACE    &kp ENTER        &kp RET  &mo 2   &kp LANG_HANGEUL  &trans        &trans
            >;

            sensor-bindings = <&Display_Knob>;
            display-name = "LAYER0";
            label = "layer_0";
        };

        layer_right {
            bindings = <
&kp GRAVE  &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9            &kp F10            &kp F11
&trans     &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME          &kp MINUS          &kp F12
&trans     &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT         &kp LEFT_BRACKET   &kp RIGHT_BRACKET
&trans     &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11           &kp F12            &trans
&trans     &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &kp DELETE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
            >;

            display-name = "layer1";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            label = "layer_1";
        };

        layer_left {
            bindings = <
&kp TILDE   &kp F1        &kp F2          &kp F3       &kp F4  &kp F5    &trans  &trans  &trans  &trans      &trans     &trans       &trans
&trans      &bt BT_CLR    &bt BT_CLR_ALL  &trans       &trans  &trans    &trans  &trans  &trans  &trans      &trans     &kp UNDER    &kp PLUS
&trans      &out OUT_USB  &out OUT_BLE    &trans       &trans  &trans    &trans  &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans      &sys_reset    &trans          &bootloader  &trans  &trans    &trans  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&kp K_MUTE  &trans        &trans          &trans       &trans  &trans    &trans  &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
            label = "layer_2";
        };

        layer_sys {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans           &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR
&trans      &trans        &trans        &trans        &trans        &soft_off       &trans  &trans           &trans           &trans           &trans           &trans           &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans           &trans           &trans           &trans           &trans           &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans           &trans           &trans           &trans           &trans
            >;

            sensor-bindings = <&rgb_knob>;
            label = "layer_3";
        };

        layer_4 {
            display-name = "layer1";
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9            &kp F10            &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME          &kp MINUS          &kp EQUAL
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT         &kp LEFT_BRACKET   &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11           &kp F12            &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &kp DELETE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
            >;
        };
    };
};
